E1.1  [  /3]  
	a)  [  /2]
	commit ebbac9de771cfdce969349ca5b7ed6e832951453 
	Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca> 
	Date:   Wed Jan 25 15:46:52 2017 -0500 

	   Ajout du rapport 

	commit d311a41d91bdfd06aa54f3e594ab57268d54cbb1 
	Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca> 
	Date:   Wed Jan 25 15:27:34 2017 -0500 

	   First commit 

	commit 1b2a6fdc629acea28d1672e5941d0912728eeb7f 
	Author: admin <gigl-technique@polymtl.ca> 
	Date:   Tue Sep 11 15:51:58 2012 -0400 

	   Commit administratif 

	commit 70996bca0add50159f527a3495c0e19d965081c1 
	Author: Luc Lalonde <Luc.Lalonde@polymtl.ca> 
	Date:   Tue Sep 11 15:31:01 2012 -0400 

   Premier commit
	  
	b) "git log" affiche la liste des commits effectués. "git log -p" affiche en plus tout les changements de chaque commit.  [  /1]  
	
	
E1.2  [  /10]  
	2-­a)  [  /3]
	
	Sur la branche master 
	Votre branche est à jour avec 'origin/master'. 
	Modifications qui ne seront pas validées : 
	 (utilisez "git add/rm <fichier>..." pour mettre à jour ce qui sera validé) 
	 (utilisez "git checkout -- <fichier>..." pour annuler les modifications dans la copie de travail) 

	       supprimé :        ../../LISEZ-MOI 
	       modifié :         HashMap.cpp 
	       modifié :         HashMap.h 

	Fichiers non suivis: 
	(utilisez "git add <fichier>..." pour inclure dans ce qui sera validé) 

      ../../.directory 
      ../.~lock.rapport_tp1.odt# 
      pari 
       
	2-­b) Oui c'est normal. Ça indique que le fichier a été modifié.  [  /1]  
	5-­a)  Already up-to-date. [  /3]                       
	5-­b)  En faisant un git pull avant la modification du fichier, on s'est assuré de ne pas avoir de conflits. [  /2]  
	Copie  du  log: [  /1]   
	* commit e1aea2697f8f6634e1ff6e7605325823bae9b096 (HEAD -> master, origin/master, origin/HEAD)
	| Author: Loïc Bellemare-Alford <loicbellemare@hotmail.com>
	| Date:   Mon Feb 6 19:37:02 2017 -0500
	| 
	|     Ajout de la fonction pour retourner un hash
	|  
	* commit aa69d778c0a26638fe9f9197e39372ae73150d47
	| Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca>
	| Date:   Wed Jan 25 16:25:01 2017 -0500
	| 
	|     Modification du odt
	|  
	* commit 620abdfb365761bd3898e7897dfaa6e614aeef67
	| Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca>
	| Date:   Wed Jan 25 16:17:17 2017 -0500
	| 
	|     Implementation methode compteur
	|  
	* commit 2d44bad729d68614de9989adc659ece09d215a9f
	| Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca>
	| Date:   Wed Jan 25 15:51:55 2017 -0500
	| 
	|     ajout methode compteur
	|  
	* commit ebbac9de771cfdce969349ca5b7ed6e832951453
	| Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca>
	| Date:   Wed Jan 25 15:46:52 2017 -0500
	| 
	|     Ajout du rapport
	|  
	* commit d311a41d91bdfd06aa54f3e594ab57268d54cbb1
	| Author: Julien Bergeron <juberi@l4712-05.info.polymtl.ca>
	| Date:   Wed Jan 25 15:27:34 2017 -0500
	| 
	|     First commit
	|  
	* commit 1b2a6fdc629acea28d1672e5941d0912728eeb7f
	| Author: admin <gigl-technique@polymtl.ca>
	| Date:   Tue Sep 11 15:51:58 2012 -0400
	| 
	|     Commit administratif
	|  
	* commit 70996bca0add50159f527a3495c0e19d965081c1
		Author: Luc Lalonde <Luc.Lalonde@polymtl.ca>
		Date:   Tue Sep 11 15:31:01 2012 -0400
  
      Premier commit
 
E1.3  [  /10]  
	3-­a)
	On branch master
	Your branch is up-to-date with 'origin/master'.
	Changes not staged for commit:
		(use "git add <file>..." to update what will be committed)
		(use "git checkout -- <file>..." to discard changes in working directory)

		modified:   main.cpp
	no changes added to commit (use "git add" and/or "git commit -a")

	  [  /3]  
	3-­b)  [  /1]  
	6-­a)  [  /3]  
	* 821ded3 (origin/master, origin/HEAD) Ajout de la desc
	* e1aea26 (HEAD -> master) Ajout de la fonction pour retourner un hash
	* aa69d77 Modification du odt
	* 620abdf Implementation methode compteur
	* 2d44bad ajout methode compteur
	* ebbac9d Ajout du rapport
	* d311a41 First commit
	* 1b2a6fd Commit administratif
	* 70996bc Premier commit

	6-­b) Non puisqu'on a changé des lignes différentes. IL y a que des problèmes si le même contenu est modifié.  [  /2]  
	Copie  du  log:  [  /1]  
	
	Auto-merging TP1/src/main.cpp
	Auto-merging TP1/Rapport1.txt
	CONFLICT (content): Merge conflict in TP1/Rapport1.txt
	Automatic merge failed; fix conflicts and then commit the result.

	
E1.4  [  /10]  
	5-­a)  [  /3]  
	
	remote: Counting objects: 31, done.
	remote: Compressing objects: 100% (20/20), done.
	remote: Total 20 (delta 13), reused 0 (delta 0)
	Unpacking objects: 100% (20/20), done.
	From https://githost.gi.polymtl.ca/git/log1000-23
		 821ded3..66adaab  master     -> origin/master
	Updating 821ded3..66adaab
	error: Your local changes to the following files would be overwritten by merge:
		TP1/src/main.cpp
		TP1/src/pari
	Please commit your changes or stash them before you merge.
	Aborting

	
	5-­b) Oui, plusieurs éléments conflictuels ont été détectés à travers le fichier. Par exemple, il est possible de voir dans le "git diff" que dans une version on la ligne "HashMap map;" et dans un autre "HashMap mymap". [  /3]  
	5-­c) Non, il n'est pas possible de le régler automatiquement. On peut utiliser "git merge" mais cette commande va seulement combiner les fichiers du mieux possible. Elle va laisser les parties en conflit dans le fichier pour qu'on puisse décider quelle version on veut garder. [  /3]  
	
7)  BONUS  [/1]  
	Copie  du  log:  
	
	Le mot le plus populaire est : "the" avec 1243 repetitions.
	 
E2.1  [  /5]  
	Insérez  votre  graphe  de  dépendances  ici  [  /5]  
E2.2  [  /10]  
	Fichier  Makefile  [  /7]  
	
		all: pari
	 
		pari:  SomeKeyHash.o HashMap.o main.o
			g++ -o build/pari  build/SomeKeyHash.o build/HashMap.o build/main.o
			echo "pari finished building"

		HashMap.o: src/HashMap.h src/HashMap.cpp src/HashNode.h src/SomeKeyHash.h
			mkdir -p build
			g++ -c -o build/HashMap.o src/HashMap.cpp
			echo "HashMap.o finished building"
	
		SomeKeyHash.o : src/SomeKeyHash.h src/SomeKeyHash.cpp
			mkdir -p build
			g++ -c -o build/SomeKeyHash.o src/SomeKeyHash.cpp
			echo "SomeKeyHash.o finished building"
	
		main.o: src/main.cpp src/HashMap.h
			g++ -c -o build/main.o src/main.cpp
			echo "main.o finished building"

		install: 
			mkdir site
			cp data/*.txt site/
			cp build/pari site/


		clean:
			rm -rf *.o
			rm -rf site/*
	
		mrproper: clean
			rm -rf build site
	
	Exécutez  «make»,  puis  insérez  la  sortie  des  deux  commandes  «touch  ...;;  make»  [  /3]  
	
	g++ -c -o build/HashMap.o src/HashMap.cpp 
	echo "HashMap.o finished building"
	HashMap.o finished building
	g++ -c -o build/main.o src/main.cpp 
	echo "main.o finished building"
	main.o finished building
	g++ -o build/pari  build/SomeKeyHash.o build/HashMap.o build/main.o 
	echo "pari finished building"
	pari finished building
	
	--------
	
	make: Nothing to be done for 'all'.


  
Parie  2  :  [  /8]  
2)  
	a)  [  /2]  
	
		real	7m18.502s
		user	3m22.656s
		sys	0m22.720s

	
	b)  [  /2]  
	
	real	4m18.810s
	user	1m51.348s
	sys	0m13.497s

	
	c) Oui, le temps diminue environ de moitié puisqu'une partie des fichiers a déjà été compilé et ne sont pas recompilé une deuxième fois (sauf s'ils sont changés).  [  /2]  


	
  
